service: quiztopia-api
frameworkVersion: '4'
useDotenv: true

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1

  
  stage: ${opt:stage, 'dev'}

  environment:
    STAGE: ${sls:stage}
    TABLE_NAME: QuiztopiaTable-${sls:stage}
    JWT_SECRET: ${env:JWT_SECRET}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:BatchWriteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/QuiztopiaTable-${sls:stage}
            - arn:aws:dynamodb:${self:provider.region}:*:table/QuiztopiaTable-${sls:stage}/index/GSI1
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: arn:aws:logs:${self:provider.region}:*:*


plugins:
  - serverless-offline

functions:
  signup:
    handler: src/handlers/auth.signup
    events:
      - httpApi:
          path: /auth/signup
          method: post

  login:
    handler: src/handlers/auth.login
    events:
      - httpApi:
          path: /auth/login
          method: post

  getAllQuizzes:
    handler: src/handlers/quiz.getAllQuizzes
    events:
      - httpApi:
          path: /quiz
          method: get

  createQuiz:
    handler: src/handlers/quiz.createQuiz
    events:
      - httpApi:
          path: /quiz
          method: post

  deleteQuiz:
    handler: src/handlers/quiz.deleteQuiz
    events:
      - httpApi:
          path: /quiz/{quizId}
          method: delete

  addQuestion:
    handler: src/handlers/question.addQuestion
    events:
      - httpApi:
          path: /quiz/question
          method: post

  getQuizByUser:
    handler: src/handlers/quiz.getQuizByUser
    events:
      - httpApi:
          path: /quiz/{userId}/{quizId}
          method: get

  submitScore:
    handler: src/handlers/score.submitScore
    events:
      - httpApi:
          path: /quiz/{quizId}/score
          method: post

  getLeaderboard:
    handler: src/handlers/score.getLeaderboard
    events:
      - httpApi:
          path: /quiz/{quizId}/leaderboard
          method: get

resources:
  Resources:
    QuiztopiaTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: QuiztopiaTable-${sls:stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL